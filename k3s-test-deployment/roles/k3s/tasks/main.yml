---
- name: Download k3s
  become: False
  local_action: 
    module: get_url 
    url: "{{k3s_bin_url}}"
    dest: "/tmp/k3s"
    checksum: "{{k3s_bin_checksum}}"
  run_once: True

- name: Copy k3s binary on node
  ansible.builtin.copy:
    src: /tmp/k3s
    dest: /usr/local/bin/k3s
    mode: '0777'
    owner: root
    group: root
- name: Create kubectl link
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- block:
  - name: Create k3s server service
    template:
      src: "k3s-server.service"
      dest: /etc/systemd/system/k3s-server.service
  - name: Start k3s server
    systemd:
      name: k3s-server.service
      daemon_reload: yes
      enabled: yes
      state: started
  - name: Wait for k3s token
    wait_for:
      path: "{{k3s_token_path}}"
  - name: Save server token
    shell: cat "{{k3s_token_path}}"
    register: tmp_k3s_server_token
  - name: Wait for cluster
    shell: /usr/local/bin/kubectl get serviceaccount default > /dev/null; echo $?
    register: sa_check
    until: sa_check.stdout|int == 0
    retries: 50
    delay: 10
  when: "'k3s_servers' in group_names"
  run_once: True

- block:
  - name: Create path for token file on agent node
    file:
      path: "{{k3s_token_path | dirname}}"
      state: directory
  - name: Create token file on agent node
    shell: echo "{{tmp_k3s_server_token.stdout}}" > "{{k3s_token_path}}"
  - name: Create k3s agent service
    template:
      src: "k3s-agent.service"
      dest: /etc/systemd/system/k3s-agent.service
  - name: Start k3s agent
    systemd:
      name: k3s-agent.service
      daemon_reload: yes
      enabled: yes
      state: started
  when: "'k3s_agents' in group_names"
